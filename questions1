You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.

The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, 
nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

Example 1:

Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.
--- 
Answer:
class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        # Remove the excess elements from nums1 and nums2
        del nums1[m:]
        del nums2[n:]
        
        # Merge nums2 into nums1
        nums1.extend(nums2)
        
        # Sort nums1 in place
        nums1.sort()
----
Adding Elements:
append(element): Adds an element to the end of the list.
extend(iterable): Extends the list by appending elements from the iterable.
insert(index, element): Inserts an element at the specified index.
Removing Elements:
pop([index]): Removes and returns the element at the specified index. If no index is provided, removes and returns the last element.
remove(element): Removes the first occurrence of the specified element from the list.
clear(): Removes all elements from the list.
Accessing Elements:
Indexing: Access elements by their index, e.g., my_list[0].
Slicing: Access a subset of elements using slice notation, e.g., my_list[1:4].
index(element): Returns the index of the first occurrence of the specified element.
count(element): Returns the number of occurrences of the specified element in the list.
Sorting and Reversing:
sort(): Sorts the elements of the list in ascending order.
reverse(): Reverses the order of the elements in the list.
Copying and Joining:
copy(): Returns a shallow copy of the list.
join(iterable): Concatenates the elements of the iterable with the list.
Other Operations:
len(): Returns the number of elements in the list.
min(): Returns the smallest element in the list.
max(): Returns the largest element in the list.
sum(): Returns the sum of all elements in the list.
